// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations.Core
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Entities.ListItem", b =>
                {
                    b.Property<int>("ListItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("InsertDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("InsertPersonId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSystemConfig")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ListItemCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ListItemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("ListItemSystemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("UpdatePersonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ListItemId");

                    b.HasIndex("ListItemSystemName")
                        .IsUnique();

                    b.HasIndex("ListItemCategoryId", "ListItemName")
                        .IsUnique();

                    b.ToTable("ListItem");
                });

            modelBuilder.Entity("Entities.ListItemCategory", b =>
                {
                    b.Property<int>("ListItemCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("InsertDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("InsertPersonId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSystemConfig")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ListItemCategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("ListItemCategorySystemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("UpdatePersonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ListItemCategoryId");

                    b.HasIndex("ListItemCategorySystemName")
                        .IsUnique();

                    b.ToTable("ListItemCategory");
                });

            modelBuilder.Entity("Entities.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("InsertDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("InsertPersonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("UpdatePersonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Entities.ListItem", b =>
                {
                    b.HasOne("Entities.ListItemCategory", "ListItemCategory")
                        .WithMany()
                        .HasForeignKey("ListItemCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ListItemCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
